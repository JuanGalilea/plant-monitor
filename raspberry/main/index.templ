package main 

templ hello(name string) {
<html>
  <head>
    <title>KLog Plantz</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      crossorigin="anonymous"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
      crossorigin="anonymous"
    ></script>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://unpkg.com/htmx.org@1.9.9"></script>
    <script src="https://unpkg.com/htmx.org/dist/ext/sse.js"></script>+
    <script src="https://unpkg.com/htmx.org/dist/ext/client-side-templates.js"></script>
    <script src="https://unpkg.com/mustache@latest"></script>
    <link
      rel="stylesheet"
      href="https://unpkg.com/charts.css/dist/charts.min.css"
    />
    <script>
      htmx.defineExtension('update_chartjs', {
        transformResponse: function (text, xhr, elt) {
          var response = JSON.parse(text);
          var chart = Chart.getChart(response.chartId);

          chart.config.data.datasets[0].data = response.data;
          chart.options.plugins.title.text = response.title;

          chart.update();

          // Find the previous button and update its hx-get attributes
          var previous = htmx.find("#" + response.previousButtonId)
          previous.setAttribute("hx-get", response.previous);

          // We have to notify HTMX about the updates to the DOM
          htmx.process(previous); 

          // Find the next button and update its hx-get attributes
          var next = htmx.find("#" + response.nextButtonId)
          next.setAttribute("hx-get", response.next);

          // We have to notify HTMX about the updates to the DOM
          htmx.process(next); 

          // Disable the previous and next buttons if we are on the first or last page
          if (response.self == response.previous) {
              previous.setAttribute("disabled", "disabled");
          } else {
              previous.removeAttribute("disabled");
          }

          if (response.self == response.next) {
              next.setAttribute("disabled", "disabled");
          } else { 
              next.removeAttribute("disabled");
          }

          // Return an empty string to prevent HTMX from performing string operations on a null.
          return "";
        }
      });
    </script>
  </head>
  <body>
    <h1>Hello, {name}</h1>
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
      <a class="navbar-brand" href>KLog Plantz</a>
    </nav>
    <div class="container mt-4">
      <h1 class="text-center">Sensor Dashboard</h1>
      <div>
        <table class="table table-bordered">
          <thead class="thead-dark">
            <tr>
              <th>Sensor Type</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>Humidity</td>
              <td sse-swap="humidityUpdate">--</td>
            </tr>
            <tr>
              <td>Temperature</td>
              <td sse-swap="temperatureUpdate">--</td>
            </tr>
            <tr>
              <td>Light</td>
              <td sse-swap="lightUpdate">--</td>
            </tr>
          </tbody>
        </table>
        <table class="charts-css line hide-data multiple">
          <caption>
            Line Example #1
          </caption>
          <tbody hx-ext="sse, " sse-connect="/events" hx-swap="beforeend" sse-swap="sowitroli">
            <template hx-template="lineChartUpdate">
              <tr>
                <td style="--start: {{#humidityUpdate}}; --end: {humidity}">
                  <span class="data"> </span>
                </td>
              </tr>
              <tr>
                <td style="--start: {prevTemperature}; --end: {temperature}">
                  <span class="data"> </span>
                </td>
              </tr>
              <tr>
                <td style="--start: {prevLight}; --end: {light}">
                  <span class="data"></span>
                </td>
              </tr>
            </template>
          </tbody>
        </table>
      </div>
    </div>
  </body>
</html>
}
